{"version":3,"file":"index.es.js","sources":["../src/helpers.js","../src/components/PreviewList.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\n    if (file.type.split('/')[0] === 'image') {\n        return true;\n    }\n}\n\nexport function convertBytesToMbsOrKbs(filesize) {\n    let size = '';\n    if (filesize >= 1048576) {\n        size = (filesize / 1048576) + ' megabytes';\n    } else if (filesize >= 1024) {\n        size = (filesize / 1024) + ' kilobytes';\n    } else {\n        size = filesize + ' bytes';\n    }\n    return size;\n}\n\nexport async function createFileFromUrl(url) {\n    const response = await fetch(url);\n    const data = await response.blob();\n    const metadata = {type: data.type};\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\n    return new File([data], filename, metadata);\n}\n\nexport function readFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event?.target?.result);\n        };\n        reader.onerror = (event) => {\n            reader.abort();\n            reject(event);\n        };\n        reader.readAsDataURL(file);\n    });\n}\n","import Chip from '@mui/material/Chip';\nimport {styled} from '@mui/material/styles';\nimport Fab from '@mui/material/Fab';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PREFIX = 'MuiDropzonePreviewList';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    imageContainer: `${PREFIX}-imageContainer`,\n    image: `${PREFIX}-image`,\n    removeButton: `${PREFIX}-removeButton`,\n};\n\nconst StyledGrid = styled(Grid)(({\n    theme: {palette, shape, spacing},\n}) => ({\n    [`&.${classes.root}`]: {},\n\n    [`& .${classes.imageContainer}`]: {\n        position: 'relative',\n        zIndex: 10,\n        textAlign: 'center',\n        '&:hover $image': {\n            opacity: 0.3,\n        },\n        '&:hover $removeButton': {\n            opacity: 1,\n        },\n    },\n\n    [`& .${classes.image}`]: {\n        height: 100,\n        width: 'initial',\n        maxWidth: '100%',\n        color: palette.text.primary,\n        transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\n        boxSizing: 'border-box',\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\n        borderRadius: shape.borderRadius,\n        zIndex: 5,\n        opacity: 1,\n    },\n\n    [`& .${classes.removeButton}`]: {\n        transition: '.5s ease',\n        position: 'absolute',\n        opacity: 0,\n        top: spacing(-1),\n        right: spacing(-1),\n        width: 40,\n        height: 40,\n        '&:focus': {\n            opacity: 1,\n        },\n    },\n}));\n\nfunction PreviewList({\n    fileObjects,\n    handleRemove,\n    showFileNames,\n    useChipsForPreview,\n    previewChipProps,\n    previewGridClasses,\n    previewGridProps,\n    classes,\n    getPreviewIcon,\n}) {\n    if (useChipsForPreview) {\n        return (\n            <StyledGrid\n                spacing={1}\n                direction=\"row\"\n                {...previewGridProps.container}\n                container={true}\n                className={clsx(classes.root, previewGridClasses.container)}\n            >\n                {fileObjects.map((fileObject, i) => {\n                    return (\n                        <Grid\n                            {...previewGridProps.item}\n                            key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                            className={classes.imageContainer}\n                        >\n                            <Chip\n                                variant=\"outlined\"\n                                {...previewChipProps}\n                                label={fileObject.file.name}\n                                onDelete={handleRemove(i)}\n                            />\n                        </Grid>\n                    );\n                })}\n            </StyledGrid>\n        );\n    }\n\n    return (\n        <Grid\n            spacing={8}\n            {...previewGridProps.container}\n            container={true}\n            className={clsx(classes.root, previewGridClasses.container)}\n        >\n            {fileObjects.map((fileObject, i) => {\n                return (\n                    <Grid\n                        size={4}\n                        {...previewGridProps.item}\n                        key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                        className={clsx(classes.imageContainer, previewGridClasses.item)}\n                    >\n                        {getPreviewIcon(fileObject, classes)}\n\n                        {showFileNames && (\n                            <Typography variant=\"body1\" component=\"p\">\n                                {fileObject.file.name}\n                            </Typography>\n                        )}\n\n                        <Fab\n                            onClick={handleRemove(i)}\n                            aria-label=\"Delete\"\n                            className={classes.removeButton}\n                        >\n                            <DeleteIcon />\n                        </Fab>\n                    </Grid>\n                );\n            })}\n        </Grid>\n    );\n}\n\nPreviewList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n    getPreviewIcon: PropTypes.func.isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    previewChipProps: PropTypes.object,\n    previewGridClasses: PropTypes.object,\n    previewGridProps: PropTypes.object,\n    showFileNames: PropTypes.bool,\n    useChipsForPreview: PropTypes.bool,\n};\n\nexport default (PreviewList);\n","import Snackbar from '@mui/material/Snackbar';\nimport {styled} from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Alert from '@mui/material/Alert';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, {Fragment} from 'react';\nimport Dropzone from 'react-dropzone';\nimport {convertBytesToMbsOrKbs, isImage, readFile} from '../helpers';\nimport PreviewList from './PreviewList';\n\nconst PREFIX = 'MuiDropzoneArea';\n\nconst classes = {\n    root: `${PREFIX}-root`,\n    active: `${PREFIX}-active`,\n    invalid: `${PREFIX}-invalid`,\n    textContainer: `${PREFIX}-textContainer`,\n    text: `${PREFIX}-text`,\n    icon: `${PREFIX}-icon`,\n    resetButton: `${PREFIX}-resetButton`,\n};\n\nconst Root = styled('br/')(({\n    theme: {palette, shape, spacing},\n}) => ({\n    '@keyframes progress': {\n        '0%': {\n            backgroundPosition: '0 0',\n        },\n        '100%': {\n            backgroundPosition: '-70px 0',\n        },\n    },\n    [`& .${classes.root}`]: {\n        position: 'relative',\n        width: '100%',\n        minHeight: '250px',\n        backgroundColor: palette.background.paper,\n        border: 'dashed',\n        borderColor: palette.divider,\n        borderRadius: shape.borderRadius,\n        boxSizing: 'border-box',\n        cursor: 'pointer',\n        overflow: 'hidden',\n    },\n\n    [`& .${classes.active}`]: {\n        animation: '$progress 2s linear infinite !important',\n        // eslint-disable-next-line max-len\n        backgroundImage: `repeating-linear-gradient(-45deg, ${palette.background.paper}, ${palette.background.paper} 25px, ${palette.divider} 25px, ${palette.divider} 50px)`,\n        backgroundSize: '150% 100%',\n        border: 'solid',\n        borderColor: palette.primary.light,\n    },\n\n    [`& .${classes.invalid}`]: {\n        // eslint-disable-next-line max-len\n        backgroundImage: `repeating-linear-gradient(-45deg, ${palette.error.light}, ${palette.error.light} 25px, ${palette.error.dark} 25px, ${palette.error.dark} 50px)`,\n        borderColor: palette.error.main,\n    },\n\n    [`& .${classes.textContainer}`]: {\n        textAlign: 'center',\n    },\n\n    [`& .${classes.text}`]: {\n        marginBottom: spacing(3),\n        marginTop: spacing(3),\n    },\n\n    [`& .${classes.icon}`]: {\n        width: 51,\n        height: 51,\n        color: palette.text.primary,\n    },\n\n    [`& .${classes.resetButton}`]: {\n        display: 'block',\n        margin: '10px 0',\n    },\n}));\n\nconst defaultSnackbarAnchorOrigin = {\n    horizontal: 'left',\n    vertical: 'bottom',\n};\n\nconst defaultGetPreviewIcon = (fileObject, classes) => {\n    if (isImage(fileObject.file)) {\n        return (<img\n            className={classes.image}\n            role=\"presentation\"\n            src={fileObject.data}\n        />);\n    }\n\n    return <AttachFileIcon className={classes.image} />;\n};\n\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\nclass DropzoneAreaBase extends React.PureComponent {\n    state = {\n        openSnackBar: false,\n        snackbarMessage: '',\n        snackbarVariant: 'success',\n    };\n\n    notifyAlert() {\n        const {onAlert} = this.props;\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\n        if (openSnackBar && onAlert) {\n            onAlert(snackbarMessage, snackbarVariant);\n        }\n    }\n\n    handleDropAccepted = async(acceptedFiles, evt) => {\n        const {fileObjects, filesLimit, getFileAddedMessage, getFileLimitExceedMessage, onAdd, onDrop} = this.props;\n\n        if (filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit) {\n            this.setState({\n                openSnackBar: true,\n                snackbarMessage: getFileLimitExceedMessage(filesLimit),\n                snackbarVariant: 'error',\n            }, this.notifyAlert);\n            return;\n        }\n\n        // Notify Drop event\n        if (onDrop) {\n            onDrop(acceptedFiles, evt);\n        }\n\n        // Retrieve fileObjects data\n        const fileObjs = await Promise.all(\n            acceptedFiles.map(async(file) => {\n                const data = await readFile(file);\n                return {\n                    file,\n                    data,\n                };\n            })\n        );\n\n        // Notify added files\n        if (onAdd) {\n            onAdd(fileObjs);\n        }\n\n        // Display message\n        const message = fileObjs.reduce((msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name), '');\n        this.setState({\n            openSnackBar: true,\n            snackbarMessage: message,\n            snackbarVariant: 'success',\n        }, this.notifyAlert);\n    }\n\n    handleDropRejected = (rejectedFiles, evt) => {\n        const {\n            acceptedFiles,\n            filesLimit,\n            fileObjects,\n            getDropRejectMessage,\n            getFileLimitExceedMessage,\n            maxFileSize,\n            onDropRejected,\n        } = this.props;\n\n        let message = '';\n        if (fileObjects.length + rejectedFiles.length > filesLimit) {\n            message = getFileLimitExceedMessage(filesLimit);\n        } else {\n            rejectedFiles.forEach((rejectedFile) => {\n                message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\n            });\n        }\n\n        if (onDropRejected) {\n            onDropRejected(rejectedFiles, evt);\n        }\n\n        this.setState({\n            openSnackBar: true,\n            snackbarMessage: message,\n            snackbarVariant: 'error',\n        }, this.notifyAlert);\n    }\n\n    handleRemove = (fileIndex) => (event) => {\n        event.stopPropagation();\n\n        const {fileObjects, getFileRemovedMessage, onDelete} = this.props;\n\n        // Find removed fileObject\n        const removedFileObj = fileObjects[fileIndex];\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj, fileIndex);\n        }\n\n        this.setState({\n            openSnackBar: true,\n            snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\n            snackbarVariant: 'info',\n        }, this.notifyAlert);\n    };\n\n    handleCloseSnackbar = () => {\n        this.setState({\n            openSnackBar: false,\n        });\n    };\n\n    render() {\n        const {\n            acceptedFiles,\n            alertSnackbarProps,\n            classes,\n            disableRejectionFeedback,\n            dropzoneClass,\n            dropzoneParagraphClass,\n            dropzoneProps,\n            dropzoneText,\n            fileObjects,\n            filesLimit,\n            getPreviewIcon,\n            Icon,\n            inputProps,\n            maxFileSize,\n            previewChipProps,\n            previewGridClasses,\n            previewGridProps,\n            previewText,\n            showAlerts,\n            showFileNames,\n            showFileNamesInPreview,\n            showPreviews,\n            showPreviewsInDropzone,\n            useChipsForPreview,\n            reset,\n        } = this.props;\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\n\n        const acceptFiles = acceptedFiles?.join(',');\n        const isMultiple = filesLimit > 1;\n        const previewsVisible = showPreviews && fileObjects.length > 0;\n        const previewsInDropzoneVisible = showPreviewsInDropzone && fileObjects.length > 0;\n\n        return (\n            <Fragment>\n                <Dropzone\n                    {...dropzoneProps}\n                    accept={acceptFiles}\n                    onDropAccepted={this.handleDropAccepted}\n                    onDropRejected={this.handleDropRejected}\n                    maxSize={maxFileSize}\n                    multiple={isMultiple}\n                >\n                    {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\n                        <Root\n                            {...getRootProps({\n                                className: clsx(\n                                    classes.root,\n                                    dropzoneClass,\n                                    isDragActive && classes.active,\n                                    (!disableRejectionFeedback && isDragReject) && classes.invalid,\n                                ),\n                            })}\n                        >\n                            <input {...getInputProps(inputProps)} />\n\n                            <div className={classes.textContainer}>\n                                <Typography\n                                    variant=\"h5\"\n                                    component=\"p\"\n                                    className={clsx(classes.text, dropzoneParagraphClass)}\n                                >\n                                    {dropzoneText}\n                                </Typography>\n                                {Icon ? (\n                                    <Icon className={classes.icon} />\n                                ) : (\n                                    <CloudUploadIcon className={classes.icon} />\n                                )}\n                            </div>\n\n                            {previewsInDropzoneVisible &&\n                                <PreviewList\n                                    fileObjects={fileObjects}\n                                    handleRemove={this.handleRemove}\n                                    getPreviewIcon={getPreviewIcon}\n                                    showFileNames={showFileNames}\n                                    useChipsForPreview={useChipsForPreview}\n                                    previewChipProps={previewChipProps}\n                                    previewGridClasses={previewGridClasses}\n                                    previewGridProps={previewGridProps}\n                                />\n                            }\n                        </Root>\n                    )}\n                </Dropzone>\n\n                {\n                    reset && (\n                        React.isValidElement(reset) ?\n                            reset :\n                            <Button\n                                onClick={reset.onClick}\n                                variant=\"outlined\"\n                                className={classes.resetButton}\n                            >\n                                {reset.text || 'reset'}\n                            </Button>\n                    )\n                }\n\n                {previewsVisible &&\n                    <Fragment>\n                        <Typography variant=\"subtitle1\" component=\"span\">\n                            {previewText}\n                        </Typography>\n\n                        <PreviewList\n                            fileObjects={fileObjects}\n                            handleRemove={this.handleRemove}\n                            getPreviewIcon={getPreviewIcon}\n                            showFileNames={showFileNamesInPreview}\n                            useChipsForPreview={useChipsForPreview}\n                            previewChipProps={previewChipProps}\n                            previewGridClasses={previewGridClasses}\n                            previewGridProps={previewGridProps}\n                        />\n                    </Fragment>\n                }\n\n                {((typeof showAlerts === 'boolean' && showAlerts) ||\n                    (Array.isArray(showAlerts) && showAlerts.includes(snackbarVariant))) &&\n                    <Snackbar\n                        anchorOrigin={defaultSnackbarAnchorOrigin}\n                        autoHideDuration={6000}\n                        {...alertSnackbarProps}\n                        open={openSnackBar}\n                        onClose={this.handleCloseSnackbar}\n                    >\n                        <Alert severity={snackbarVariant} onClose={this.handleCloseSnackbar}>{snackbarMessage}</Alert>\n                    </Snackbar>\n                }\n            </Fragment>\n        );\n    }\n}\n\nDropzoneAreaBase.defaultProps = {\n    acceptedFiles: [],\n    filesLimit: 3,\n    fileObjects: [],\n    maxFileSize: 3000000,\n    dropzoneText: 'Drag and drop a file here or click',\n    previewText: 'Preview:',\n    disableRejectionFeedback: false,\n    showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\n    showPreviewsInDropzone: true,\n    showFileNames: false,\n    showFileNamesInPreview: false,\n    useChipsForPreview: false,\n    previewChipProps: {},\n    previewGridClasses: {},\n    previewGridProps: {},\n    reset: undefined,\n    showAlerts: true,\n    alertSnackbarProps: {\n        anchorOrigin: {\n            horizontal: 'left',\n            vertical: 'bottom',\n        },\n        autoHideDuration: 6000,\n    },\n    getFileLimitExceedMessage: (filesLimit) => (`Maximum allowed number of files exceeded. Only ${filesLimit} allowed`),\n    getFileAddedMessage: (fileName) => (`File ${fileName} successfully added.`),\n    getPreviewIcon: defaultGetPreviewIcon,\n    getFileRemovedMessage: (fileName) => (`File ${fileName} removed.`),\n    getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\n        let message = `File ${rejectedFile.name} was rejected. `;\n        if (!acceptedFiles.includes(rejectedFile.type)) {\n            message += 'File type not supported. ';\n        }\n        if (rejectedFile.size > maxFileSize) {\n            message += 'File is too big. Size limit is ' + convertBytesToMbsOrKbs(maxFileSize) + '. ';\n        }\n        return message;\n    },\n};\n\nexport const FileObjectShape = PropTypes.shape({\n    file: PropTypes.object,\n    data: PropTypes.any,\n});\n\nDropzoneAreaBase.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** A list of file types to accept.\n     * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n     */\n    acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** Icon to be displayed inside the dropzone area. */\n    Icon: PropTypes.elementType,\n    /** Currently loaded files. */\n    fileObjects: PropTypes.arrayOf(FileObjectShape),\n    /** Maximum file size (in bytes) that the dropzone will accept. */\n    maxFileSize: PropTypes.number,\n    /** Text inside the dropzone. */\n    dropzoneText: PropTypes.string,\n    /** Custom CSS class name for dropzone container. */\n    dropzoneClass: PropTypes.string,\n    /** Custom CSS class name for text inside the container. */\n    dropzoneParagraphClass: PropTypes.string,\n    /** Disable feedback effect when dropping rejected files. */\n    disableRejectionFeedback: PropTypes.bool,\n    /** Shows previews **BELOW** the dropzone. */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the dropzone image. */\n    showFileNames: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n    /** Uses deletable Material-UI Chip components to display file names. */\n    useChipsForPreview: PropTypes.bool,\n    /**\n     * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n     *\n     * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n     */\n    previewChipProps: PropTypes.object,\n    /**\n     * Custom CSS classNames for preview Grid components.<br/>\n     * Should be in the form {container: string, item: string, image: string}.\n     */\n    previewGridClasses: PropTypes.object,\n    /**\n     * Props to pass to the Material-UI Grid components.<br/>\n     * Should be in the form {container: GridProps, item: GridProps}.\n     *\n     * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n     */\n    previewGridProps: PropTypes.object,\n    /** The label for the file preview section. */\n    previewText: PropTypes.string,\n    /**\n     * The node of button to clear dropzone.\n     *\n     * - can be a node to mount in a placeholder.\n     * - can be an object:\n     *  - text (string) - text of the button\n     *  - onClick (function) - callback fired when reset button clicked\n     */\n    reset: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.shape({\n            text: PropTypes.string,\n            onClick: PropTypes.func,\n        }),\n    ]),\n    /**\n     * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\n     *\n     * - can be a boolean (\"global\" `true` or `false` for all alerts).\n     * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\n     *  - showAlerts={['error']} for only errors.\n     *  - showAlerts={['error', 'info']} for both errors and info.\n     *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\n     *  - showAlerts={[]} is same as showAlerts={false}.\n     */\n    showAlerts: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info'])),\n    ]),\n    /**\n     * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n     *\n     * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n     */\n    alertSnackbarProps: PropTypes.object,\n    /**\n     * Props to pass to the Dropzone component.\n     *\n     * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n     */\n    dropzoneProps: PropTypes.object,\n    /**\n     * Attributes applied to the input element.\n     *\n     * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n     */\n    inputProps: PropTypes.object,\n    /**\n     * Get alert message to display when files limit is exceed.\n     *\n     * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n     *\n     * @param {number} filesLimit The `filesLimit` currently set for the component.\n     */\n    getFileLimitExceedMessage: PropTypes.func,\n    /**\n     * Get alert message to display when a new file is added.\n     *\n     * *Default*: \"File ${fileName} successfully added.\"\n     *\n     * @param {string} fileName The newly added file name.\n     */\n    getFileAddedMessage: PropTypes.func,\n    /**\n     * Get alert message to display when a file is removed.\n     *\n     * *Default*: \"File ${fileName} removed.\"\n     *\n     * @param {string} fileName The name of the removed file.\n     */\n    getFileRemovedMessage: PropTypes.func,\n    /**\n     * Get alert message to display when a file is rejected onDrop.\n     *\n     * *Default*: \"File ${rejectedFile.name} was rejected.\"\n     *\n     * @param {Object} rejectedFile The file that got rejected\n     * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n     * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n     */\n    getDropRejectMessage: PropTypes.func,\n    /**\n     * A function which determines which icon to display for a file preview.\n     *\n     * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\n     *\n     * @param {FileObject} objectFile The file which the preview will belong to\n     * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\n     */\n    getPreviewIcon: PropTypes.func,\n    /**\n     * Fired when new files are added to dropzone.\n     *\n     * @param {FileObject[]} newFiles The new files added to the dropzone.\n     */\n    onAdd: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {FileObject} deletedFileObject The file that was removed.\n     * @param {number} index The index of the removed file object.\n     */\n    onDelete: PropTypes.func,\n    /**\n     * Fired when the user drops files into the dropzone.\n     *\n     * @param {File[]} droppedFiles All the files dropped into the dropzone.\n     * @param {Event} event The react-dropzone drop event.\n     */\n    onDrop: PropTypes.func,\n    /**\n     * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n     *\n     * @param {File[]} rejectedFiles All the rejected files.\n     * @param {Event} event The react-dropzone drop event.\n     */\n    onDropRejected: PropTypes.func,\n    /**\n     * Fired when an alert is triggered.\n     *\n     * @param {string} message Alert message.\n     * @param {string} variant One of \"error\", \"info\", \"success\".\n     */\n    onAlert: PropTypes.func,\n};\n\nexport default (DropzoneAreaBase);\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\nconst splitDropzoneAreaProps = (props) => {\n    const {clearOnUnmount, initialFiles, onChange, onDelete, ...dropzoneAreaProps} = props;\n    return [{clearOnUnmount, initialFiles, onChange, onDelete}, dropzoneAreaProps];\n};\n\n/**\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\n *\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\n *\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\n */\nclass DropzoneArea extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file), fileObjects);\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file, removedFileObjIdx);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    render() {\n        const [, dropzoneAreaProps] = splitDropzoneAreaProps(this.props);\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneAreaBase\n                {...dropzoneAreaProps}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n            />\n        );\n    }\n}\n\nDropzoneArea.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneArea.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /**\n     * Fired when the files inside dropzone change.\n     *\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n     * @param {FileObject[]} loadedFileObjects All the files (as FileObjects) currently loaded into the dropzone.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {File} deletedFile The file that was removed.\n     * @param {number} index The index of the removed file object.\n     */\n    onDelete: PropTypes.func,\n};\n\nexport default DropzoneArea;\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\n// Split props related to DropzoneDialog from DropzoneArea ones\nfunction splitDropzoneDialogProps(allProps) {\n    const {\n        cancelButtonText,\n        dialogProps,\n        dialogTitle,\n        fullWidth,\n        maxWidth,\n        onClose,\n        onSave,\n        open,\n        submitButtonText,\n        ...dropzoneAreaProps\n    } = allProps;\n\n    return [\n        {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        },\n        dropzoneAreaProps,\n    ];\n}\n\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneAreaBase`.\n */\nclass DropzoneDialogBase extends React.PureComponent {\n    render() {\n        const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\n        const {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        } = dropzoneDialogProps;\n\n        // Submit button state\n        const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\n\n        return (\n            <Dialog\n                {...dialogProps}\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                onClose={onClose}\n                open={open}\n            >\n                <DialogTitle>{dialogTitle}</DialogTitle>\n\n                <DialogContent>\n                    <DropzoneAreaBase\n                        {...dropzoneAreaProps}\n                    />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        onClick={onClose}\n                    >\n                        {cancelButtonText}\n                    </Button>\n\n                    <Button\n                        disabled={submitDisabled}\n                        onClick={onSave}\n                    >\n                        {submitButtonText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDropzoneDialogBase.defaultProps = {\n    open: false,\n    dialogTitle: 'Upload file',\n    dialogProps: {},\n    fullWidth: true,\n    maxWidth: 'sm',\n    cancelButtonText: 'Cancel',\n    submitButtonText: 'Submit',\n    showPreviews: true,\n    showPreviewsInDropzone: false,\n    showFileNamesInPreview: true,\n};\n\nDropzoneDialogBase.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Sets whether the dialog is open or closed. */\n    open: PropTypes.bool,\n    /** The Dialog title. */\n    dialogTitle: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n    ]),\n    /**\n     * Props to pass to the Material-UI Dialog components.\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n     */\n    dialogProps: PropTypes.object,\n    /**\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\n     * Notice that the dialog width grow is limited by the default margin.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n     * Set to `false` to disable `maxWidth`.\n     */\n    maxWidth: PropTypes.string,\n    /** Cancel button text in dialog. */\n    cancelButtonText: PropTypes.string,\n    /** Submit button text in dialog. */\n    submitButtonText: PropTypes.string,\n    /**\n     * Fired when the modal is closed.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onClose: PropTypes.func,\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onSave: PropTypes.func,\n    /**\n     * Shows previews **BELOW** the dropzone.<br/>\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n     */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n};\n\nexport default DropzoneDialogBase;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneDialogBase from './DropzoneDialogBase';\n\n\n/**\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\n *\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\n *\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\n */\nclass DropzoneDialog extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file), fileObjects);\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    handleClose = (evt) => {\n        const {clearOnUnmount, onClose} = this.props;\n\n        if (onClose) {\n            onClose(evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    handleSave = (evt) => {\n        const {clearOnUnmount, onSave} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onSave) {\n            onSave(fileObjects.map((fileObject) => fileObject.file), evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    render() {\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneDialogBase\n                {...this.props}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n                onClose={this.handleClose}\n                onSave={this.handleSave}\n            />\n        );\n    }\n}\n\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneDialog.propTypes = {\n    ...DropzoneDialogBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {File[]} files All the files currently inside the Dropzone.\n     * @param {SyntheticEvent} event The react `SyntheticEvent`.\n     */\n    onSave: PropTypes.func,\n};\n\nexport default DropzoneDialog;\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","_x","_createFileFromUrl","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","data","metadata","filename","wrap","_callee$","_context","prev","next","fetch","sent","blob","replace","pop","abrupt","File","stop","readFile","Promise","resolve","reject","reader","FileReader","onload","event","_event$target","target","result","onerror","abort","readAsDataURL","PREFIX","classes","root","concat","imageContainer","image","removeButton","StyledGrid","styled","Grid","_ref","_ref$theme","theme","palette","shape","spacing","_defineProperty","position","zIndex","textAlign","opacity","height","width","maxWidth","color","text","primary","transition","boxSizing","boxShadow","borderRadius","top","right","PreviewList","_ref3","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","getPreviewIcon","React","_extends","direction","container","className","clsx","map","fileObject","i","_fileObject$file$name","_fileObject$file","item","key","name","Chip","variant","label","onDelete","_fileObject$file$name2","_fileObject$file2","Typography","component","Fab","onClick","_DeleteIcon","DeleteIcon","process","env","NODE_ENV","propTypes","PropTypes","object","isRequired","arrayOf","func","bool","active","invalid","textContainer","icon","resetButton","Root","backgroundPosition","minHeight","backgroundColor","background","paper","border","borderColor","divider","cursor","overflow","animation","backgroundImage","backgroundSize","light","error","dark","main","marginBottom","marginTop","display","margin","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","createElement","role","src","AttachFileIcon","DropzoneAreaBase","_React$PureComponent","_this","_classCallCheck","_len","length","args","Array","_key","_callSuper","state","openSnackBar","snackbarMessage","snackbarVariant","handleDropAccepted","_callee2","acceptedFiles","evt","_this$props","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onAdd","onDrop","fileObjs","message","_callee2$","_context2","props","setState","notifyAlert","all","_ref4","_x3","reduce","msg","fileObj","_x2","handleDropRejected","rejectedFiles","_this$props2","getDropRejectMessage","maxFileSize","onDropRejected","forEach","rejectedFile","fileIndex","stopPropagation","_this$props3","getFileRemovedMessage","removedFileObj","handleCloseSnackbar","_inherits","_createClass","value","onAlert","_this$state","render","_this2","_this$props4","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","Icon","inputProps","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","reset","_this$state2","acceptFiles","join","isMultiple","previewsVisible","previewsInDropzoneVisible","Fragment","Dropzone","accept","onDropAccepted","maxSize","multiple","_ref5","getRootProps","getInputProps","isDragActive","isDragReject","CloudUploadIcon","isValidElement","Button","isArray","includes","Snackbar","anchorOrigin","autoHideDuration","open","onClose","Alert","severity","PureComponent","defaultProps","undefined","fileName","FileObjectShape","any","string","number","elementType","oneOfType","node","oneOf","splitDropzoneAreaProps","clearOnUnmount","initialFiles","onChange","dropzoneAreaProps","_objectWithoutProperties","_excluded","DropzoneArea","notifyFileChange","loadInitialFiles","_ref2","initialFile","t0","console","log","addFiles","_callee3","newFileObjects","_callee3$","_context3","deleteFile","removedFileObjIdx","remainingFileObjs","filter","componentDidMount","componentWillUnmount","_splitDropzoneAreaPro","_splitDropzoneAreaPro2","_slicedToArray","splitDropzoneDialogProps","allProps","cancelButtonText","dialogProps","dialogTitle","fullWidth","onSave","submitButtonText","DropzoneDialogBase","_splitDropzoneDialogP","_splitDropzoneDialogP2","dropzoneDialogProps","submitDisabled","Dialog","DialogTitle","DialogContent","DialogActions","disabled","element","DropzoneDialog","handleClose","handleSave"],"mappings":"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"}